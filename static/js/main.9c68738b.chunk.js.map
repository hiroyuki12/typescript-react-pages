{"version":3,"sources":["page/qiita/Search.js","components/MyNavbar.js","components/Footer.js","page/qiita/Qiita.js","reportWebVitals.ts","index.tsx"],"names":["Search","props","handleChange","event","title","target","value","setState","handleSubmit","preventDefault","search","state","className","href","rel","React","Component","MyNavbar","Navbar","bg","variant","Nav","Link","Footer","Container","styled","div","Qiita","useState","postsList","setPostsList","page","setPage","isLoading","setIsLoading","tag","setTag","error","setError","handleScroll","lodash","throttle","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevCount","useEffect","addEventListener","removeEventListener","handleClick","list","tagButtonClick","url","fetch","headers","then","res","json","data","ok","concat","message","color","onClick","map","item","index","src","user","profile_image_url","width","height","loading","moment","created_at","fromNow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAmCeA,E,kDAhCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,aAAe,SAACC,GAEd,IAAMC,EAAQD,EAAME,OAAOC,MAE3B,EAAKC,SAAS,CAAEH,MAAOA,KApBN,EAwBnBI,aAAe,SAACL,GACdA,EAAMM,iBAEN,EAAKR,MAAMS,OAAO,EAAKC,MAAMP,OAC7B,EAAKG,SAAS,CAAEH,MAAO,MA1BvB,EAAKO,MAAQ,CAAEP,MAAO,IAFL,E,0CAKnB,WACE,OACE,gCACE,mBAAGQ,UAAU,gBAAgBC,KAAK,qDAAqDR,OAAO,SAASS,IAAI,aAA3G,gHAAwJ,uBACxJ,mBAAGF,UAAU,gBAAgBC,KAAK,wDAAwDR,OAAO,SAASS,IAAI,aAA9G,sIACA,qH,GAXaC,IAAMC,W,gBCeZC,MAdf,SAAkBhB,GAChB,OACE,8BACE,cAACiB,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,eAACC,EAAA,EAAD,CAAKT,UAAU,UAAf,UACE,cAACS,EAAA,EAAIC,KAAL,CAAUT,KAAK,gBAAf,kBACA,cAACQ,EAAA,EAAIC,KAAL,CAAUT,KAAK,qBAAf,mBACA,cAACQ,EAAA,EAAIC,KAAL,CAAUT,KAAK,oBAAf,0BCKKU,I,EAAAA,EAZf,SAAgBtB,GACd,OACE,8BACE,cAACiB,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,cAACC,EAAA,EAAD,CAAKT,UAAU,UAAf,SACE,cAACS,EAAA,EAAIC,KAAL,CAAUT,KAAK,gBAAf,yB,kCCCJW,G,YAAYC,EAAOC,IAAV,6CAsHAC,MAlHf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsBN,mBAAS,SAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAGMC,EAAeC,IAAOC,UAAS,WAEjCC,OAAOC,YAAcC,SAASC,gBAAgBC,YAC9CF,SAASC,gBAAgBE,cAOzBf,GAAQ,SAACgB,GAAD,OAAeA,EAAY,OAGpC,KAEHC,qBAAU,WAGR,OAFAP,OAAOQ,iBAAiB,SAAUX,GAE3B,WACLG,OAAOS,oBAAoB,SAAUZ,MAEtC,IAGHU,qBAAU,WAERG,MACC,CAACrB,IAGJkB,qBAAU,WAERG,MACC,CAACjB,IAEJ,IA8ByBkB,EA9BnBC,EAAiB,SAACjD,GACtByB,EAAa,IACbM,EAAO/B,IAGH+C,EAAc,SAAC/C,GACnB,IACMkD,EAAG,wCAAoCpB,EAApC,uBAAsDJ,EAAtD,qBADK,IAEdG,GAAa,GAGbsB,MAAMD,EAAK,CAAEE,QADG,KAEbC,MAAK,SAAAC,GAAG,OACPA,EAAIC,OAAOF,MAAK,SAAAG,GAAI,MAAK,CACvBC,GAAIH,EAAIG,GACRD,cAGHH,MAAK,SAAAC,GACCA,EAAIG,IAKPhC,EAAaD,EAAUkC,OAAOJ,EAAIE,OAClC3B,GAAa,KALbI,EAASqB,EAAIE,KAAKG,SAClB9B,GAAa,QAuBrB,OACE,qCACE,cAAC,EAAD,IACA,yBAAQtB,UAAU,kBAAlB,UACE,sBAAMqD,MAAM,MAAZ,SAAkB,4BAAI5B,MACtB,cAAC,EAAD,CAAQ3B,OAAQ0C,IAChB,uBACA,wBAAQc,QAAS,WAAOZ,EAAe,UAAvC,mBACA,wBAAQY,QAAS,WAAOZ,EAAe,UAAvC,mBACA,wBAAQY,QAAS,WAAOZ,EAAe,UAAvC,mBACA,wBAAQY,QAAS,WAAOZ,EAAe,QAAvC,iBACA,wBAAQY,QAAS,WAAOZ,EAAe,SAAvC,kBACCnB,EACD,8BA3BmBkB,EA2BExB,EA1BXwB,EAAKc,KAAI,SAACC,EAAMC,GAC5B,OACE,oBAAIzD,UAAU,OAAd,SACE,eAACY,EAAD,WACA,qBAAK8C,IAAKF,EAAKG,KAAKC,kBAAmBC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,SACtE,mBAAG/D,UAAU,gBAAgBC,KAAMuD,EAAKb,IAAKlD,OAAO,SAASS,IAAI,aAAjE,SAA+EsD,EAAKhE,QAFpF,IAEgGwE,IAAOR,EAAKS,YAAYC,cAHhGT,SA0B1B,uBACCpC,EACC,2DAAsBF,EAAtB,YAAqC,IAAIA,EAAK,GAAG,EAAjD,OAEN,2DAAsBA,EAAtB,YAAqC,IAAIA,EAAK,GAAG,EAAjD,UAGE,cAAC,EAAD,QC5GSgD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BX,M","file":"static/js/main.9c68738b.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\" };\n  }\n\n  render() {\n    return (\n      <div>\n        <a className=\"QiitaApp-link\" href=\"https://mbp.hatenablog.com/entry/2021/07/15/214300\" target=\"_blank\" rel=\"noreferrer\">ReactでQiita APIから記事情報を取得して表示</a><br />\n        <a className=\"QiitaApp-link\" href=\"https://qiita.com/kei_1011/items/cdc12086347025719152\" target=\"_blank\" rel=\"noreferrer\">React Qiita API から記事情報を取得して表示させる - Qiita</a>\n        <h3>QiitaでReactタグありの記事を表示</h3>\n      </div>\n    );\n  }\n\n  // valueが変更された際に実行\n  handleChange = (event) => {\n    // 変更したvalueが返ってくる\n    const title = event.target.value;\n    // stateを変更\n    this.setState({ title: title });\n  };\n\n  // submitされた際に実行\n  handleSubmit = (event) => {\n    event.preventDefault(); // ページ遷移防止\n    // 受け取ったメソッドを実行し、app の state を変更している\n    this.props.search(this.state.title);\n    this.setState({ title: \"\" }); // submit後は、titleを空にする\n  };\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Navbar, Nav } from 'react-bootstrap';\n\nfunction MyNavbar(props) {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href='/react-pages/'>Home</Nav.Link>\n          <Nav.Link href='/react-pages/qiita'>Qiita</Nav.Link>\n          <Nav.Link href='/react-pages/blog'>Blog</Nav.Link>\n        </Nav>\n      </Navbar >\n    </div>\n  );\n}\n\nexport default MyNavbar;\n","import React from \"react\";\nimport { Navbar, Nav } from 'react-bootstrap';\n\nfunction Footer(props) {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href='/react-pages/'>Home</Nav.Link>\n        </Nav>\n      </Navbar >\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport Search from \"./Search\";\nimport MyNavbar from \"../../components/MyNavbar\";\nimport Footer from \"../../components/Footer\";\nimport lodash from 'lodash';\nimport moment from 'moment';\nimport stringWidth from \"string-width\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100%;\n`\n\nfunction Qiita() {\n  const [postsList, setPostsList] = useState([])\n  const [page, setPage] = useState(1)\n  const [isLoading, setIsLoading] = useState(false)\n  const [tag, setTag] = useState(\"react\")\n  const [error, setError] = useState(\"\")\n\n  // ��ԉ��ɓ��B������ handleClick�Ńy�[�W���X�V\n  const handleScroll = lodash.throttle(() => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    ) {\n      return;\n    }\n\n    // ��ԉ��ɓ��B�������̏���\n    //if(message !== \"loading...\") {\n      setPage((prevCount) => prevCount + 1);\n    //}\n\n  }, 500);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // page���ω��������Ɏ��s\n  useEffect(() => {\n    //document.title = `page = ${page}, message = ${message}`;\n    handleClick();\n  }, [page]); // Only re-run the effect if count changes\n\n  // tag���ω��������Ɏ��s\n  useEffect(() => {\n    //document.title = `page = ${page}, message = ${message}`;\n    handleClick();\n  }, [tag]); // Only re-run the effect if count changes\n\n  const tagButtonClick = (target: string) => {\n    setPostsList([]);\n    setTag(target);\n  }\n\n  const handleClick = (target: string) => {\n    const limit = 40;\n    const url = `https://qiita.com/api/v2/tags/${tag}/items?page=${page}&per_page=${limit}`;\n    setIsLoading(true);\n\n    const headers = {}\n    fetch(url, { headers })\n      .then(res =>\n        res.json().then(data => ({\n          ok: res.ok,\n          data,\n        }))\n      )\n      .then(res => {\n        if (!res.ok) {\n          setError(res.data.message);\n          setIsLoading(false);\n          //throw Error(res.data.message)\n        } else {\n          setPostsList(postsList.concat(res.data));\n          setIsLoading(false);\n        }\n      })\n  }\n\n  const renderImageList = (list: string) => {\n    const posts = list.map((item, index) => {\n      return (\n        <li className=\"item\" key={index}>\n          <Container>\n          <img src={item.user.profile_image_url} width=\"50\" height=\"50\" loading=\"lazy\" />\n          <a className=\"QiitaApp-link\" href={item.url} target=\"_blank\" rel=\"noreferrer\">{item.title}</a> {moment(item.created_at).fromNow()}\n          </Container>\n        </li>\n      );\n    });\n    return posts;\n  }\n\n  return (\n    <>\n      <MyNavbar />\n      <header className=\"QiitaApp-header\">\n        <font color=\"red\"><b>{error}</b></font>\n        <Search search={handleClick} />\n        <br />\n        <button onClick={() => {tagButtonClick(\"react\")}}>react</button>\n        <button onClick={() => {tagButtonClick(\"swift\")}}>swift</button>\n        <button onClick={() => {tagButtonClick(\"azure\")}}>azure</button>\n        <button onClick={() => {tagButtonClick(\"aws\")}}>aws</button>\n        <button onClick={() => {tagButtonClick(\".net\")}}>.NET</button>\n        {tag}\n        <ul>{renderImageList(postsList)}</ul>\n\n        <br />\n        {isLoading ? (\n          <>Loading .... page: {page}/20posts/{20*(page-1)+1}-</>\n        ) : (\n   \t<>Not Loading. page: {page}/20posts/{20*(page-1)+1}-</> \n        )}\n      </header>\n      <Footer />\n    </>\n  );\n}\n\nexport default Qiita;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Qiita from './page/qiita/Qiita';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Qiita />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}